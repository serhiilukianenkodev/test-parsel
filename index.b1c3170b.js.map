{"mappings":"YAkCA,IACUA,EAKFC,EAsCRC,QAAQC,KA3CEH,EAAM,CACR,EAAG,EACH,GAAI,GAGJC,GAAS,EAoCH,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAlC1BG,SAAQ,SAAAC,GAEV,OAAQA,GACJ,KAAK,EACDL,EAAI,IAAM,EACV,MAEJ,KAAK,GACD,GAAe,IAAXA,EAAI,GAAW,OAAOC,GAAU,EACpCD,EAAI,IAAM,EACVA,EAAI,KAAO,EACX,MAEJ,KAAK,GACD,GAAgB,IAAZA,EAAI,KAAwB,IAAXA,EAAI,GAAU,CAC/BA,EAAI,KAAO,EACXA,EAAI,IAAM,EACV,K,CAGJ,GAAIA,EAAI,GAAK,EAAG,OAAOC,GAAU,EAEjCD,EAAI,IAAM,EAKlBE,QAAQC,IAAIH,E,IAGTC,IAQXC,QAAQC,IAAI,Y","sources":["src/js/merge-interval.js"],"sourcesContent":["// console.log('interval');\n\n// var merge = function (intervals) {\n//     if (intervals.length <= 1) return intervals;\n\n//     const sortedIntervals = intervals.sort((prev, next) => prev[0] - next[0])\n//     // console.log('sortedIntervals', sortedIntervals);\n//     let i = 0\n//     const result = []\n//     while (i < (sortedIntervals.length)) {\n//          if (i === (sortedIntervals.length - 1)) {\n//                 result.push(sortedIntervals[i])\n//                 break\n//             }\n//         if (sortedIntervals[i][1] < sortedIntervals[i + 1][0]) {\n//             result.push(sortedIntervals[i])\n//             i += 1;\n//             continue\n//         }\n\n//         let intEnd =  sortedIntervals[i][1] < sortedIntervals[i + 1][1] ? sortedIntervals[i + 1][1] : sortedIntervals[i][1]\n//         sortedIntervals[i][1] = intEnd;\n//         sortedIntervals.splice(i + 1, 1)\n//         console.table(sortedIntervals);\n//     }\n//     return result\n// };\n\n// const intervals = [[1,3],[2,6],[8,10],[15,18]]\n\n// console.log('result', merge(intervals));\n\n// brick wall -> 554 leetCode\n\nvar lemonadeChange = function(bills) {\n    const map = {\n        5: 0,\n        10: 0,\n    };\n\n    let result = true;\n\n    bills.forEach(element => {\n\n        switch (element) {\n            case 5:\n                map[5] += 1;\n                break;\n            \n            case 10:\n                if (map[5] === 0)  return result =  false;\n                map[5] -= 1;\n                map[10] += 1;\n                break;\n                \n            case 20:\n                if (map[10] !== 0 && map[5] !== 0) {\n                    map[10] -= 1;\n                    map[5] -= 1;\n                    break;\n                }\n\n                if (map[5] < 3) return result =  false;\n\n                map[5] -= 3;\n                \n                break;\n        }\n\n        console.log(map);\n    });\n   \n    return result;\n\n};\n\nconst bills = [5,5,5,5,20,20,5,5,20,5]\n\nconsole.log(lemonadeChange(bills));\n\nconsole.log(' new hola');\n"],"names":["map","result","console","log","forEach","element"],"version":3,"file":"index.b1c3170b.js.map"}