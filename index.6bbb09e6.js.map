{"mappings":"AA8BAA,QAAQC,IAAI,SA5BA,SAAUC,GAClB,GAAIA,EAAUC,QAAU,EAAG,OAAOD,EAMlC,IAJA,IAAME,EAAkBF,EAAUG,MAAK,SAACC,EAAMC,G,OAASD,EAAK,GAAKC,EAAK,E,IAElEC,EAAI,EACFC,EAAS,GACRD,EAAKJ,EAAgBD,QAAS,CAChC,GAAIK,IAAOJ,EAAgBD,OAAS,EAAI,CACjCM,EAAOC,KAAKN,EAAgBI,IAC5B,K,CAER,GAAIJ,EAAgBI,GAAG,GAAKJ,EAAgBI,EAAI,GAAG,GAC/CC,EAAOC,KAAKN,EAAgBI,IAC5BA,GAAK,MAFT,CAMA,IAAIG,EAAUP,EAAgBI,GAAG,GAAKJ,EAAgBI,EAAI,GAAG,GAAKJ,EAAgBI,EAAI,GAAG,GAAKJ,EAAgBI,GAAG,GACjHJ,EAAgBI,GAAG,GAAKG,EACxBP,EAAgBQ,OAAOJ,EAAI,EAAG,GAC9BR,QAAQa,MAAMT,E,EAElB,OAAOK,C,CAKWK,CAFJ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG","sources":["src/js/merge-interval.js"],"sourcesContent":["// console.log('interval');\n\nvar merge = function (intervals) {\n    if (intervals.length <= 1) return intervals;\n\n    const sortedIntervals = intervals.sort((prev, next) => prev[0] - next[0])\n    // console.log('sortedIntervals', sortedIntervals);\n    let i = 0\n    const result = []\n    while (i < (sortedIntervals.length)) {\n         if (i === (sortedIntervals.length - 1)) {\n                result.push(sortedIntervals[i])\n                break\n            }\n        if (sortedIntervals[i][1] < sortedIntervals[i + 1][0]) {\n            result.push(sortedIntervals[i])\n            i += 1;\n            continue\n        }\n\n        let intEnd =  sortedIntervals[i][1] < sortedIntervals[i + 1][1] ? sortedIntervals[i + 1][1] : sortedIntervals[i][1]\n        sortedIntervals[i][1] = intEnd;\n        sortedIntervals.splice(i + 1, 1)\n        console.table(sortedIntervals);\n    }\n    return result\n};\n\nconst intervals = [[1,3],[2,6],[8,10],[15,18]]\n\nconsole.log('result', merge(intervals));"],"names":["console","log","intervals1","length","sortedIntervals","sort","prev","next","i","result","push","intEnd","splice","table","$9cf4a37612c61ec0$var$merge"],"version":3,"file":"index.6bbb09e6.js.map"}