{"mappings":"YAAA,IAAMA,EAAeC,SAASC,cAAc,eAExCC,EAAc,EACdC,EAAW,IAKf,SAASC,EAAUC,EAAOC,GAGtB,IAFA,IAAMC,EAAM,GAEHC,EAAIH,EAAQ,EAAGG,GAAKH,EAAQ,EAAGG,GAAI,EACpCA,GAAK,GAAKA,GAAKF,GAChBC,EAAIE,KAAKD,GAchB,OAVe,IAAXD,EAAI,IAAUA,EAAIG,QAAQ,GACf,IAAXH,EAAI,IAAUA,EAAIG,QAAQ,GAC1BH,EAAI,GAAK,GAAGA,EAAIG,QAAQ,EAAG,GAE3BH,EAAIA,EAAII,OAAS,GAAKL,GAAKC,EAAIE,KAAK,EAAEH,GACtCC,EAAIA,EAAII,OAAS,KAAOL,EAAM,GAAGC,EAAIE,KAAKH,EAAM,GAChDC,EAAIA,EAAII,OAAS,KAAOL,EAAM,GAAGC,EAAIE,KAAKH,EAAM,GAEpDC,EAAIG,QAAQ,KACZH,EAAIE,KAAK,KACFF,C,CAIX,SAASK,EAAiBC,EAAOC,GAC7B,IAAMC,EAASF,EAAMG,KAAI,SAACC,GACtB,OAAc,IAAVA,EACA,8CAGD,uCAAwFC,OAAjDD,IAAUH,EAAU,UAAY,GAAG,gBAAwBI,OAAVD,EAAM,MAAUC,OAAND,EAAM,iB,IAC5GE,KAAK,IAERpB,EAAaqB,UAAYL,C,CAnC7BH,EAAiBR,EAAUF,EAAaC,GAAWD,GACnDH,EAAasB,iBAAiB,SAsC9B,SAA2BC,GAEvB,GAA0B,QAAtBA,EAAEC,OAAOC,UAA4C,WAAtBF,EAAEC,OAAOC,SAAuB,OAEnE,GAAIF,EAAEC,OAAOE,UAAUC,SAAS,WAAY,OAE5C,IAAIC,EAEyB,MAAzBL,EAAEC,OAAOK,QAAQC,KAAwC,MAAzBP,EAAEC,OAAOK,QAAQC,MAAaF,GAAYL,EAAEC,OAAOK,QAAQC,KAE/F,GAA6B,MAAzBP,EAAEC,OAAOK,QAAQC,KAA+B,IAAhB3B,EAAmB,OACvD,GAA6B,MAAzBoB,EAAEC,OAAOK,QAAQC,KAAe3B,IAAgBC,EAAU,OAEjC,MAAzBmB,EAAEC,OAAOK,QAAQC,KAAe3B,EAAc,IAC9CyB,EAAWzB,GAAe,GAGD,MAAzBoB,EAAEC,OAAOK,QAAQC,KAAe3B,EAAcC,IAC9CwB,EAAWzB,GAAe,GAG9BA,EAAcyB,EAEdG,QAAQC,IAAI,WAAWJ,GACvBf,EAAiBR,EAAUuB,EAAUxB,GAAWwB,E","sources":["src/index.js"],"sourcesContent":["const paginationEl = document.querySelector('.pagination')\n\nlet currentPage = 1\nlet lastPage = 200\n\nrenderPagination(createArr(currentPage, lastPage), currentPage)\npaginationEl.addEventListener('click', onPaginationClick)    \n\nfunction createArr(start, end) {\n    const res = [];\n\n    for (let i = start - 2; i <= start + 2; i +=1){\n        if (i >= 1 && i <= end) {\n           res.push(i) \n        }\n    }\n\n    if (res[0] === 3) res.unshift(2)\n    if (res[0] === 2) res.unshift(1)\n    if (res[0] > 3) res.unshift(1, 0)\n\n    if (res[res.length - 1] < end) res.push(0,end)\n    if (res[res.length - 1] === end - 2) res.push(end - 1)\n    if (res[res.length - 1] === end - 3) res.push(end - 2)\n\n    res.unshift('<')\n    res.push('>')\n    return res;\n}\n\n\nfunction renderPagination(elems, current) {\n    const markup = elems.map((index) => {\n        if (index === 0) {\n    return `<li ><div class = \"empryBox\">...</div></li>`    \n        }\n    \n    return `<li ><button type=\"button\" class = \"${index === current ? 'current' : ''}\" data-btn=\"${index}\">${index}</button></li>`\n    }).join('')\n\n    paginationEl.innerHTML = markup\n}\n\n\nfunction onPaginationClick(e) {\n    // console.log(e.target.nodeName);\n    if (e.target.nodeName === 'DIV' || e.target.nodeName !== 'BUTTON') return\n    \n    if (e.target.classList.contains('current')) return\n\n    let nextPage;\n    \n    if (e.target.dataset.btn !== '<' && e.target.dataset.btn !== '<') nextPage = +e.target.dataset.btn;\n    \n    if (e.target.dataset.btn === '<' && currentPage === 1) return\n    if (e.target.dataset.btn === '>' && currentPage === lastPage) return\n\n    if (e.target.dataset.btn === '<' && currentPage > 1) {\n        nextPage = currentPage -= 1\n    }\n    \n    if (e.target.dataset.btn === '>' && currentPage < lastPage) {\n        nextPage = currentPage += 1\n    }\n    \n    currentPage = nextPage\n    // console.log('currentPage', currentPage);\n    console.log('nextPage',nextPage);\n    renderPagination(createArr(nextPage, lastPage), nextPage)\n\n}\n\n// console.log(createArr(5,20));\n\n\n\n// console.log(pagination.showRefs());\n\n// import './js/merge-interval.js'\n// const BASE_URL = 'http://localhost:3000';\n\n// function fetchPosts (){\n//  return   fetch(`${BASE_URL}/posts/`).then(r => r.json())\n// }\n\n// function fetchPostById(postId){\n//     return   fetch(`${BASE_URL}/posts/${postId}`).then(r => r.json())\n\n// }\n\n//\n\n// fetchPostById(1)\n\n// const newPost = {\n//     \"title\": \"test 22\",\n//     \"author\": \"Serhii dev\",\n// }\n\n// function addPost (post){\n// const options = {\n//     method: 'POST',\n//     body: JSON.stringify(post),\n//     headers: {\n//         'Content-Type': 'application/json',\n//     },\n// };\n\n// return fetch(`${BASE_URL}/posts/`, options).then(r => r.json())\n\n// }\n\n// addPost(newPost).then(console.log).catch(console.log)\n\n// function updatePostById(update, postId) {\n//     const options = {\n//     method: 'PATCH',\n//     body: JSON.stringify(update),\n//     headers: {\n//         'Content-Type': 'application/json',\n//     },\n// };\n\n// return fetch(`${BASE_URL}/posts/${postId}`, options).then(r => r.json())\n// }\n\n// updatePostById({ \"title\": \"new test\"},2)\n\n// function removePostBtId(postId) {\n//      const options = {\n//     method: 'DELETE',\n//     headers: {\n//         'Content-Type': 'application/json',\n//     },\n// };\n\n// return fetch(`${BASE_URL}/posts/${postId}`, options).then(r => r.json()) \n// }\n\n// removePostBtId(2).then(console.log).catch(console.log)\n"],"names":["$b8f9b7833fa37166$var$paginationEl","document","querySelector","$b8f9b7833fa37166$var$currentPage","$b8f9b7833fa37166$var$lastPage","$b8f9b7833fa37166$var$createArr","start","end","res","i","push","unshift","length","$b8f9b7833fa37166$var$renderPagination","elems","current","markup","map","index","concat","join","innerHTML","addEventListener","e","target","nodeName","classList","contains","nextPage","dataset","btn","console","log"],"version":3,"file":"index.a96ad2af.js.map"}